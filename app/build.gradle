apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

// Load signing information from file
// Source: https://developer.android.com/studio/publish/app-signing.html
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "de.timbolender.fefereader"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 4
        versionName "1.0.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        create("release") {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']

            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        getByName("release") {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.getByName("release")
        }

        getByName("debug") {
            applicationIdSuffix ".debug"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    dataBinding {
        enabled = true
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

dependencies {
    def room_version = "2.2.5"
    def lifecycle_version = "2.2.0"
    def coroutines_version = "1.1.1"
    def work_version = "2.5.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation 'androidx.fragment:fragment:1.2.4'
    implementation 'androidx.appcompat:appcompat:1.1.0'

    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "androidx.paging:paging-runtime-ktx:2.1.2"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'

    implementation 'com.google.android.material:material:1.1.0'

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    implementation "androidx.work:work-runtime-ktx:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"

    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'com.squareup.okhttp3:okhttp:4.5.0'

    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    kaptAndroidTest 'androidx.test.espresso:espresso-core:3.2.0'
    kaptTest 'junit:junit:4.12'
}
